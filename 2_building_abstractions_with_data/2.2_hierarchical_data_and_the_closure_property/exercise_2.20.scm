(define (filter predicate seq)
  (if (null? seq)
      '()
      (let ((head (car seq))
            (filtered-tail (filter predicate (cdr seq))))
        (if (predicate head)
            (cons head filtered-tail)
            filtered-tail))))

(define (same-parity x . items)
  (let ((correct-parity? (if (even? x) even? odd?)))
    (cons x (filter correct-parity? items))))
